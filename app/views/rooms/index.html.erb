 <%# TODO: Room customization   %>
<h2 class="text-2xl font-bold mb-2 text-center">
  <%= @user.name %>'s room 
</h2>
<p class="text-center mb-2">
  Level: <%= @room.level %>
  <br/>
  <%= @room.phrase %>
</p>
<div id="phaser-example"></div>
<script>
  const characterSprite = <%= raw @character_sprite.to_json %>;
  const furnitureData = <%= raw @furniture.to_json %>;
  let gameHelper;
  window.onload = function() {
    gameHelper = new window.GameHelpers.Game(characterSprite, furnitureData);
  }

  var config = {
    type: Phaser.CANVAS,
    width: 600,
    height: 400,
    transparent: true,
    parent: 'phaser-example',
    physics: {
        default: 'arcade',
        arcade: {
            gravity: {y: 0, x: 0},
            debug: true 
        }
    },
    scene: { preload, create, update, render }
  };
  var game = new Phaser.Game(config);
  function preload() {
    this.load.spritesheet('player', characterSprite.spriteSheetName, { frameWidth: 32, frameHeight: 32});
    this.load.spritesheet('furniture', '/images/MainTileMap.png', { frameWidth: 32, frameHeight: 32});
    // this.load.image('background', `/images/<%= @room.level %>.png`);
    this.load.image('background', `/images/10.png`);
  }

  var cursors, player;

  function create() {
    this.add.image(0, 0, 'background').setOrigin(0, 0);
    gameHelper.loadPlayerAnimation(this);
    let ground = gameHelper.createWalls(this);
    // gameHelper.setFurniture(this, "green_couch_forward");

    player = this.add.sprite(320, 182, 'player')
    this.physics.add.collider(player, ground);
    player.smoothed = false;
    this.physics.add.existing(player);

    cursors = this.input.keyboard.createCursorKeys();
  }

  function update() {
    gameHelper.updatePlayerMovement(player, cursors);
    gameHelper.debug(this);
  }

  function render() {
    this.debug.text(player.frame, 302, 168);
  }
</script>
