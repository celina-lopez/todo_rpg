<h2 class="text-2xl font-bold mb-2 flex">
  <%= @user.name %>'s TODOs <%= image_tag "/images/#{@user.room.character}/idle/0.png", class: "w-10 h-10 rounded-full" %>
</h2>
<p class="mb-2">
  You can add categories and items to your TODO. THIS IS A SECRET LINK!
</p>
<%= link_to "Public Room", user_room_path(@user), class: "btn btn-primary" %>
<%= link_to "Edit Avatar", edit_user_rooms_path(@user, hush_key: params[:hush_key]), class: "btn btn-primary" %>
<div>
  <%= render "todos/components/new_category" %>

  <%= turbo_frame_tag "categories" do %>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
      <% @user.categories.each do |category| %>
        <%= render "todos/components/category_card", category: %>
      <% end %>
    </div>
  <% end %>
  <%= render "todos/components/category_modal" %>

</div>
<script>
  function categoryFetch(path, method, body = {}) {
    body.hush_key = "<%= @user.hush_key %>";
    return fetch(path, {
      method,
      headers: {
        "X-CSRF-Token": "<%= form_authenticity_token %>",
        "Content-Type": "application/json",
        "Accept": "text/vnd.turbo-stream.html"
      },
      body: JSON.stringify(body)
    })
  };

  function fetchWithTurbo(path, method, body) {
    return categoryFetch(path, method, body).then(response => response.text()).then(html => {
      Turbo.renderStreamMessage(html);
      setTimeout(() => {
        lucide.createIcons();
      }, 100);
    });
  }

  function updateItem(categoryId, itemId, completed) {
    categoryFetch(
      `categories/${categoryId}/items/${itemId}`,
      "PUT",
      { item: { completed } }
    ).then(response => response.json()).then(data => {
      if (data.completed) {
        document.getElementById(`task-${itemId}`).innerHTML = `<input type="checkbox" checked onclick="updateItem(${categoryId}, ${itemId}, ${!data.completed})"> <span class="line-through">${data.name}</span>`;
      } else {
        document.getElementById(`task-${itemId}`).innerHTML = `<input type="checkbox" onclick="updateItem(${categoryId}, ${itemId}, ${!data.completed})"> <span>${data.name}</span>`;
      }
    })
  }

  function updateCategoryColor(categoryId, colorIndex) {
    fetchWithTurbo(
      `categories/${categoryId}`,
      "PUT",
      { category: { color: colorIndex } }
    )
  }

  function removeCategory(categoryId) {
    fetchWithTurbo(`categories/${categoryId}`, "DELETE")
  }
  
  function clearChecked(categoryId) {
    fetchWithTurbo(`categories/${categoryId}/clear_checked`, "POST")
  }
</script>
